<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juniorok.juniorok.repository.PostRepository">
    <resultMap id="postResultMap" type="com.juniorok.juniorok.domain.Post">
        <id property="id" column="id" />
        <result property="position" column="position" />
        <result property="startedAt" column="startedAt" />
        <result property="deadline" column="deadline" />
        <result property="location" column="location" />
        <result property="minSalary" column="min_salary" />
        <result property="maxSalary" column="max_salary" />
        <result property="requirements" column="requirements" />
        <result property="preferredRequirements" column="preferred_requirements" />
        <result property="postUrl" column="post_url" />
        <result property="recommended" column="recommended" />
        <result property="deleted" column="deleted" />
        <association property="company" javaType="com.juniorok.juniorok.domain.Company" >
            <id property="id" column="company_id" />
            <result property="name" column="company_name" />
            <result property="ceo" column="ceo" />
            <result property="introduction" column="introduction" />
            <result property="homepage" column="homepage" />
            <result property="techBlog" column="tech_blog" />
            <result property="employees" column="employees" />
            <result property="developers" column="developers" />
            <result property="revenue" column="revenue" />
            <result property="avgSalary" column="avg_salary" />
            <collection property="addresses" ofType="com.juniorok.juniorok.dto.Address" >
                <id property="id" column="id"/>
                <result property="state" column="state" />
                <result property="city" column="city" />
                <result property="others" column="others" />
            </collection>
            <collection property="skills" ofType="com.juniorok.juniorok.dto.Skill">
                <id property="id" column="id" />
                <result property="name" column="name" />
            </collection>
            <collection property="benefits" ofType="com.juniorok.juniorok.dto.Benefit">
                <id property="id" column="id" />
                <result property="name" column="name" />
            </collection>
        </association>
        <association property="jobType" javaType="com.juniorok.juniorok.dto.JobType" >
            <id property="id" column="id" />
            <result property="name" column="name" />
        </association>
        <collection property="positionSkills" ofType="com.juniorok.juniorok.dto.Skill" >
            <id property="id" column="id" />
            <result property="name" column="name" />
        </collection>
    </resultMap>

    <insert id="save" parameterType="com.juniorok.juniorok.domain.Post">
        INSERT INTO posts(
        <if test="company.id != null" >company_id,</if>
        <if test="jobType.id != null" >job_type_id,</if>
        <if test="position != null" >position,</if>
        <if test="startedAt != null" >started_at,</if>
        <if test="deadline != null" >deadline,</if>
        <if test="location != null" >location,</if>
        <if test="minSalary != null" >min_salary,</if>
        <if test="maxSalary != null" >max_salary,</if>
        <if test="requirements != null" >requirements,</if>
        <if test="preferredRequirements != null" >preferred_requirements,</if>
        <if test="postUrl != null" >post_url</if>)
        VALUES (
        <if test="company.id != null" >#{company.id},</if>
        <if test="jobType.id != null" >#{jobType.id},</if>
        <if test="position != null" >#{position},</if>
        <if test="startedAt != null" >#{startedAt},</if>
        <if test="deadline != null" >#{deadline},</if>
        <if test="location != null" >#{location},</if>
        <if test="minSalary != null" >#{minSalary},</if>
        <if test="maxSalary != null" >#{maxSalary},</if>
        <if test="requirements != null" >#{requirements},</if>
        <if test="preferredRequirements != null" >#{preferredRequirements},</if>
        <if test="postUrl != null" >#{postUrl}</if>)
    </insert>

    <select id="findPage" parameterType="int" resultMap="postResultMap">
        SELECT p.id, p.position, p.location, p.recommended, p.deadline,
               c.id AS company_id, c.name AS company_name, c.avg_salary / 10000 AS avg_salary
        FROM posts AS p
        JOIN companies AS c ON p.company_id = c.id
        LIMIT #{param1}, #{param2}
    </select>




    <!--어드민 게시글 전부 불러옴-->
    <select id="getAllPosts" resultMap="postResultMap">
        SELECT p.id, p.position, p.location, p.recommended, p.deadline,
               c.id, c.name, c.avg_salary
        FROM posts AS p
                 JOIN companies AS c ON p.company_id = c.id
        where p.deleted=0
        ORDER BY p.id DESC
    </select>


    <!--어드민 게시글 삭제-->
    <update id="deletePost" parameterType="java.lang.Long">
        UPDATE posts SET deleted = 1 WHERE id = #{postId}
    </update>


</mapper>